[tool.poetry]
name = "cline-llm-methodology"
version = "1.0.0"
description = "Metodolog√≠a y herramientas para desarrollo de proyectos con LLM en VSCode usando Cline"
authors = ["Jiva Grisma <jivagrisma@example.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/jivagrisma/cline-llm-methodology"
repository = "https://github.com/jivagrisma/cline-llm-methodology"
documentation = "https://github.com/jivagrisma/cline-llm-methodology/tree/main/docs"
keywords = ["llm", "methodology", "vscode", "cline", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Documentation",
]

[tool.poetry.dependencies]
python = "^3.11.11"
pyyaml = "^6.0.1"
click = "^8.1.7"
typing-extensions = "^4.9.0"
rich = "^13.7.0"
jinja2 = "^3.1.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
black = "^24.1.1"
isort = "^5.13.2"
mypy = "^1.8.0"
flake8 = "^7.0.0"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
llm-setup = "cline_llm_methodology.cli:main"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --cov=cline_llm_methodology"
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["cline_llm_methodology"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py",
]